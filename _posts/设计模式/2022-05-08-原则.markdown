---

title:  "原则"
categories: jekyll update 设计模式
sidebar:
  nav: docs
---

## 单一职责

类的职责分离，减少耦合。

## 开放封闭原则

软件实体（类、模块、函数等等）应该可以扩展，但是不可以修改。

## 里氏代换原则

子类型必须能够替换掉它们的父类型。

## 依赖倒转原则

- 高层模块不应该依赖低层模块。两个都应该依赖抽象。
- 抽象不应该依赖细节。细节应该依赖抽象。

## 迪米特法则

如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。

## 组合/聚合复用

尽量使用组合/聚合，尽量不要使用类继承。